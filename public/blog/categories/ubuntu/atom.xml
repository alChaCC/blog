<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | AlohaCC]]></title>
  <link href="http://ccaloha.cc/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://ccaloha.cc/"/>
  <updated>2015-05-18T18:49:08+08:00</updated>
  <id>http://ccaloha.cc/</id>
  <author>
    <name><![CDATA[Aloha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[HOWTO] Using ElasticSearch in Ruby on Rails and setup remote ES server via Vagrant]]></title>
    <link href="http://ccaloha.cc/blog/2014/11/27/howto-using-elasticsearch-in-ruby-on-rails-and-setup-remote-es-server-via-vagrant/"/>
    <updated>2014-11-27T07:45:20+08:00</updated>
    <id>http://ccaloha.cc/blog/2014/11/27/howto-using-elasticsearch-in-ruby-on-rails-and-setup-remote-es-server-via-vagrant</id>
    <content type="html"><![CDATA[<p>首先，要先感謝 "老王"，和 "Marz"哥，給我參考他們的Elasticsearch的文件！</p>

<p>安裝部分，就是參考他們的操作！</p>

<p>這邊最主要的不一樣，是設定遠端的Elasticsearch機器！</p>

<p>改天我會補上 如何實作 "搜尋字詞推薦"，而且是整合soulmate歐！！</p>

<!-- more -->


<h2>Mac本機開發</h2>

<h3>安裝 elastic search</h3>

<pre><code>brew install elasticsearch
</code></pre>

<h3>連結</h3>

<pre><code>ln -sfv /usr/local/opt/elasticsearch/*.plist ~/Library/LaunchAgents
</code></pre>

<h3>啟動</h3>

<pre><code>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.elasticsearch.plist
</code></pre>

<h3>關閉</h3>

<pre><code>launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.elasticsearch.plist
</code></pre>

<h3>Run ElasticSearch</h3>

<pre><code>export JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
elasticsearch

(或是)

elasticsearch --config=/usr/local/opt/elasticsearch/config/elasticsearch.yml  
</code></pre>

<h3>測試是否安裝成功</h3>

<pre><code>curl -X GET http://localhost:9200
</code></pre>

<p>你應該會看到</p>

<pre><code>{
  "status" : 200,
  "name" : "Rage",
  "version" : {
    "number" : "1.3.2",
    "build_hash" : "dee175dbe2f254f3f26992f5d7591939aaefd12f",
    "build_timestamp" : "2014-08-13T14:29:30Z",
    "build_snapshot" : false,
    "lucene_version" : "4.9"
  },
  "tagline" : "You Know, for Search"
}
</code></pre>

<h3>Code 要加入</h3>

<p>新增一個檔案</p>

<p><strong>lib/tasks/elasticsearch.rake</strong></p>

<p>寫入</p>

<pre><code>require 'elasticsearch/rails/tasks/import'
</code></pre>

<p>修改<strong>Gemfile</strong>，加入</p>

<pre><code>gem 'elasticsearch-rails'
gem 'elasticsearch-model' 
</code></pre>

<h3>跑index</h3>

<p>詳情請參考：<strong>Gem: </strong><a href="https://github.com/elasticsearch/elasticsearch-rails/tree/master/elasticsearch-rails">elasticsearch-rail</a></p>

<pre><code>bundle exec rake environment elasticsearch:import:all
</code></pre>

<p>如果只需要import一個model</p>

<pre><code>bundle exec rake environment elasticsearch:import:model CLASS='Article'
</code></pre>

<p>如果只需要import某些特定的scope</p>

<pre><code>bundle exec rake environment elasticsearch:import:model CLASS='Article' SCOPE='published'
</code></pre>

<h3>清除index</h3>

<pre><code>Article.__elasticsearch__.client.indices.delete index: Article.index_name rescue nil
</code></pre>

<h2>安裝elasticsearch 在Ubuntu 裡面</h2>

<h3>使用vagrant 起三檯機器(用來模擬正式環境)</h3>

<p>請查看前半部</p>

<p><a href="http://ccaloha.cc/blog/2014/09/19/howto-using-sunspot-access-remote-solr-instance-ubuntu-14-dot-04-in-ruby-on-rails-using-vagrant/">HOWTO - Using Sunspot to Access Remote Solr instance(Ubuntu 14.04) in Ruby on Rails Using Vagrant</a></p>

<h3>安裝 elascticsearch</h3>

<pre><code>vagrant ssh search 
sudo apt-get install openjdk-7-jre-headless -y
sudo wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add -
</code></pre>

<h3>編輯source list</h3>

<pre><code>sudo vim /etc/apt/sources.list
</code></pre>

<p>把下面的code放進去</p>

<pre><code>  deb http://packages.elasticsearch.org/elasticsearch/1.3/debian stable main
</code></pre>

<p>繼續安裝</p>

<pre><code>  sudo apt-get update
  sudo apt-get install elasticsearch
  sudo update-rc.d elasticsearch defaults 95 10
  sudo /etc/init.d/elasticsearch start
</code></pre>

<h2>Ruby on Rails 部分</h2>

<h3>更改producion deploy的東東</h3>

<p><strong>config/deploy/production.rb</strong></p>

<pre><code>  role :app, %w{apps@33.33.13.10}
  role :web, %w{apps@33.33.13.10}
  role :db,  %w{apps@33.33.13.11}
  role :crontaber, %w{apps@33.33.13.10}
  set :rails_env, :production
  set :unicorn_rack_env, :production
  set :branch, 'feature/update_search_engine_to_elasticsearch'
</code></pre>

<p>我故意把ip改成 vagrant的ip</p>

<p>另外，branch也用成我自己測試的branch: <strong>feature/update_search_engine_to_elasticsearch</strong></p>

<h2>如何設定將elasticsearch 連到別台機器</h2>

<ol>
<li><p>新增一個 <strong>config/elasticsearch.yml</strong></p>

<pre><code> default: &amp;default
   host: 127.0.0.1:9200

 development:
   &lt;&lt;: *default
   host: 127.0.0.1:9200

 test:
   &lt;&lt;: *default

 production:
   &lt;&lt;: *default
   host: 33.33.13.12:9200
</code></pre></li>
<li><p>在application.rb加入</p>

<pre><code> es = YAML.load(File.open("#{Rails.root}/config/elasticsearch.yml"))[Rails.env]

   elasticsearch_config = {
       host: es["host"],
       transport_options: {
       request: { timeout: 5 }
       },
   }
   Elasticsearch::Model.client = Elasticsearch::Client.new(elasticsearch_config)
</code></pre></li>
<li><p>因為我的product需要做搜尋，所以在Product model 我這樣寫</p></li>
</ol>


<p>  (ps. elasticsearch 真的是博大精深，我沒有時間去深入專研，以下的指令是我try出最符合我需要的搜尋結果，所以大家可參考參考)</p>

<pre><code>def self.essearch(query,sort,page)
  if sort == 'relevance'

    results = __elasticsearch__.search(
      {
        query: {
          filtered: {
            filter: {
              range: { product_price_min: { "gt" =&gt; 0} }
             }, 
            query: {
              bool: {
                must: [
                  multi_match: {
                    query: query,
                    type:  "phrase",
                    fields: ["product_cname^10", "product_ename^10",'product_description', 'product_keyword']
                  }
                ]
              }
            }
          }
        },
        "sort" =&gt; [
          "_score",
          {"product_urcosme_exp" =&gt; {"order" =&gt; "desc"} } 
        ],
        "from" =&gt; (page.to_i-1)*5,
        "size" =&gt; 5          
      }
    )
  else
    # 因為不是精準搜尋，所以這邊的排序就真的會依照我們給他的sort，
    # 但是你總不希望，搜尋面膜，結果第一個結果是：淨膚儀，就因為他的上市時間最晚....囧～
    # 所以，我還是希望第一個看到的結果是以關鍵字有出現的為佳，所以我多使用了filter的功能
    results = __elasticsearch__.search(
      {
        query: {
          filtered: {
            filter: {
              range: { product_price_min: { "gt" =&gt; 0} }
             },
            filter: {
               exists: { field: "product_keyword" }
             },
            query: {
              bool: {
                must: [
                  multi_match: {
                    query: query,
                    type:  "cross_fields",
                    fields: ['product_cname', 'product_ename'],
                    operator:   "and", 
                    #minimum_should_match: '30%'
                  }
                ],
                should: [
                  { match: { "product_description" =&gt;  query}},
                  { match: { "product_keyword" =&gt; query }}
                ],
              }
            }
          }
        },
        "sort" =&gt; [
          {"#{sort}" =&gt; {"order" =&gt; "#{sort == "product_price_min"? 'asc' : 'desc'}"} } , 
           "_score",
          { "product_cname" =&gt; "desc" }
        ],
        "from" =&gt; (page.to_i-1)*5,
        "size" =&gt; 5        
      }
    )
  # 這邊目的是為了如果上面都沒有搜尋結果才做的比較rough的搜尋
  if results.results.size == 0
    results = __elasticsearch__.search(
      {
        query: {
          filtered: {
            filter: {
              range: { product_price_min: { "gt" =&gt; 0} }
             },
            query: {
              bool: {
                must: [
                  multi_match: {
                    query: query,
                    type:  "cross_fields",
                    fields: ['product_cname', 'product_ename','product_description','product_keyword'],
                    operator:   "and"
                  }
                ]
              }
            }
          }
        },
        "sort" =&gt; [
          {"#{sort}" =&gt; {"order" =&gt; "#{sort == "product_price_min"? 'asc' : 'desc'}"} } , 
           "_score",
          { "product_cname" =&gt; "desc" }
        ],
        "from" =&gt; (page.to_i-1)*5,
        "size" =&gt; 5          
      }
    )
  end
  end
  return results
end
</code></pre>

<ol>
<li><p>在product的controller</p>

<p>   @products = Product.essearch(params[:keyword],params[:sort],params[:page])</p>

<p>   @products =  search.results.results</p>

<p> 接下來就是丟給view顯示了～我就不提了～</p></li>
</ol>


<h3>接下來就是deploy加上看看有沒有成功摟</h3>

<pre><code>cap production deploy #因為"config/deploy/production.rb"有改成vagrant設定，所以請放心～
vagrant ssh search    # 登入你的搜尋機器
elasticsearch         # 把elasticsearch 服務跑起來
vagrant ssh app       # 登入跑服務的機器
cd 你的專案            
bundle exec rake environment elasticsearch:import:all  #跑index，這邊如果有成功，代表你已經連過去遠端了！
</code></pre>

<h3>完成！</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HOWTO] Using Sunspot to access remote Solr instance(Ubuntu 14.04) in Ruby on Rails using Vagrant]]></title>
    <link href="http://ccaloha.cc/blog/2014/09/19/howto-using-sunspot-access-remote-solr-instance-ubuntu-14-dot-04-in-ruby-on-rails-using-vagrant/"/>
    <updated>2014-09-19T20:16:23+08:00</updated>
    <id>http://ccaloha.cc/blog/2014/09/19/howto-using-sunspot-access-remote-solr-instance-ubuntu-14-dot-04-in-ruby-on-rails-using-vagrant</id>
    <content type="html"><![CDATA[<p> 首先，當然要感謝網路上一堆大神的資源</p>

<p> 特別是：</p>

<p> <a href="https://gorails.com/setup/ubuntu/14.04">Setup Ruby On Rails on
Ubuntu 14.04 Trusty Tahr</a></p>

<p><a href="https://gorails.com/deploy/ubuntu/14.04">Deploy Ruby On Rails on
Ubuntu 14.04 Trusty Tahr</a></p>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-solr-on-ubuntu-14-04">How to Install Solr on Ubuntu 14.04</a></p>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-redis">How To Install and Use Redis</a></p>

<p><a href="http://gogojimmy.net/2013/05/26/vagrant-tutorial/">[教學]使用Vagrant練習環境佈署</a></p>

<p><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-memcache-on-ubuntu-14-04">How To Install and Use Memcache on Ubuntu 14.04</a></p>

<p>一開始之前，來說一下，我的目標：</p>

<p>起一台 WEB server 和 Solr server(search engine)，Database則是使用 Mac裡面的 mysql(因為我開發時把DB資料都建在那邊了)，讓這三方彼此co work !</p>

<h2>心得分享</h2>

<blockquote><p>其實本機端的Sunspot他其實也是透過把指令丟給localhost:8983的搜尋引擎做搜尋，現在只是要把丟到localhost:8983換成另外一個遠端的IP。所以，對於Sunspot來說，就是改個config檔。至於做Index的話，我本來以為要讓遠端的搜尋引擎可以access到DB，然後登入到搜尋引擎的機器去設定？。但....根本就不用，一樣，Sunspot已經幫你做掉了，所以基本上，只要你的Rail專案設定的database.yml可以access，Sunspot會自動幫你對應 DB和 遠端的搜尋引擎做index，所以沒有想像中的困難！</p></blockquote>

<p>了解大概流程概念後，那就來實作吧</p>

<h2>使用Vagrant，模擬多機器的環境</h2>

<p>當然要起很多機器，當然是要使用  <strong><a href="https://www.vagrantup.com/">Vagrant</a> + <a href="https://www.virtualbox.org/">VirtualBox</a></strong></p>

<p>那Vagrant的部分，步驟說明就交給Jimmy大大了 <a href="http://gogojimmy.net/2013/05/26/vagrant-tutorial/">[教學]使用Vagrant練習環境佈署</a>！</p>

<p>和Jimmy大大，不一樣的地方大概就是一些有部分調整的lib和script</p>

<p>這邊直接打我的操作流程：</p>

<ol>
<li>下載Vagrant，<a href="http://www.vagrantup.com/downloads">點我到官網下載連結</a></li>
<li>下載Virtual Box，<a href="https://www.virtualbox.org/wiki/Downloads">點我到官網下載</a></li>
<li><p>抓image</p>

<pre><code> vagrant box add Ubuntu-14-04-64bit https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box
</code></pre></li>
<li><p>初始化</p>

<pre><code> vagrant init Ubuntu-14-04-64bit
</code></pre></li>
<li><p>把機器Run起來</p>

<pre><code>vagrant up 
</code></pre></li>
<li><p>登入機器</p>

<pre><code>vagrant ssh 
</code></pre></li>
<li><p>安裝Ruby 環境(這邊我有小修一點東西，讓指令跑起來ok)</p>

<pre><code> curl -L https://gist.githubusercontent.com/alChaCC/f1295f5024eb4de71008/raw/bee55fd048b274b40095c6e645aa5ca38721fcc2/bootstrap-chef-solo.sh | sh
</code></pre></li>
<li><p>登出 機器</p>

<pre><code>exit    
</code></pre></li>
<li><p>打包這個Box</p>

<pre><code> vagrant package
</code></pre></li>
<li><p>開一個mobile的box</p>

<pre><code> vagrant box add ubuntu-14_04 package.box
</code></pre></li>
<li><p>設定Vagrantfile 讓你可一次起N檯機器(2014/9/17這是目前最新的設定)</p>

<pre><code> vim Vagrantfile
</code></pre></li>
</ol>


<p>加入：</p>

<pre><code>config.vm.define :app do |app_config|
      app_config.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--name", "app", "--memory", "1024"]
      end
      app_config.vm.box = "Ubuntu-14-04-64bit"
      app_config.vm.host_name = "app"
      app_config.vm.network "private_network", ip: "33.33.13.10"
  end

  config.vm.define :search do |search_config|
    search_config.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--name", "search", "--memory", "1024"]
    end
    search_config.vm.box = "Ubuntu-14-04-64bit"
    search_config.vm.host_name = "search"
    search_config.vm.network "private_network", ip: "33.33.13.12"
  end
</code></pre>

<h2>安裝機器.....using Chef ....But</h2>

<p>照理說這邊應該跟得上時代，使用 chef_solo, knife 來安裝才是....</p>

<p>但...由於時間的關係，實在沒時間玩，你懂得～專案還是要Go啊～ 何況是，我必須在兩天之內試出東西</p>

<p>Anyway, 傻人只好用傻方法</p>

<h2>安裝 Rails 環境 在app機器上</h2>

<p>Ruby 2.1.2  + rvm</p>

<ol>
<li><p>登入</p>

<pre><code> vagrant ssh app
</code></pre></li>
<li><p>加上 user</p>

<pre><code> sudo adduser deploy
 sudo adduser deploy sudo
 su deploy
</code></pre></li>
<li></li>
<li><p>安裝基本lib</p>

<pre><code> sudo apt-get update
 sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties
</code></pre></li>
<li><p>安裝rvm</p>

<pre><code> sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev
 curl -L https://get.rvm.io | bash -s stable
 source ~/.rvm/scripts/rvm
 echo "source ~/.rvm/scripts/rvm" &gt;&gt; ~/.bashrc
 rvm install 2.1.2
 rvm use 2.1.2 --default
 ruby -v
 echo "gem: --no-ri --no-rdoc" &gt; ~/.gemrc
</code></pre></li>
<li><p>安裝Rails</p>

<pre><code> sudo add-apt-repository ppa:chris-lea/node.js
 sudo apt-get update
 sudo apt-get install nodejs
 gem install rails
</code></pre></li>
<li><p>安裝  nginx + Passenger</p>

<pre><code> sudo apt-get install apt-transport-https
 sudo sh -c "echo 'deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main' &gt;&gt; /etc/apt/sources.list.d/passenger.list"
 sudo chown root: /etc/apt/sources.list.d/passenger.list
 sudo chmod 600 /etc/apt/sources.list.d/passenger.list
 sudo apt-get update
 sudo apt-get install nginx-full passenger
</code></pre></li>
<li><p>修改 nginx 檔案</p>

<pre><code> sudo vim /etc/nginx/nginx.conf
</code></pre>

<p> 加上</p>

<pre><code> passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
 passenger_ruby /home/deploy/.rvm/wrappers/ruby-2.1.2/ruby;
</code></pre></li>
<li><p>修改 Nginx Host</p>

<pre><code> sudo vim /etc/nginx/sites-enabled/default
</code></pre>

<p> 改上</p>

<pre><code> server {
 listen 80 default_server;
 listen [::]:80 default_server ipv6only=on;

 root /home/deploy/我的資料夾名稱/current/public;
 # index index.html index.htm;
 rails_env production;
 passenger_enabled on;
 # Make site accessible from http://localhost/
 server_name 33.33.13.10; # 這邊我讓他跟vagrant機器ip一樣

 error_page   500 502 503 504  /50x.html;
 location = /50x.html {
     root   html;
 }
</code></pre></li>
<li><p>安裝Redis</p>

<pre><code> sudo apt-get install tcl8.5
 wget http://download.redis.io/releases/redis-2.8.9.tar.gz
 tar xzf redis-2.8.9.tar.gz
 cd redis-2.8.9
 make
 make test
 sudo make install
 cd utils
 sudo ./install_server.sh
</code></pre></li>
<li><p>Install memcached</p>

<pre><code> sudo apt-get install mysql-server php5-mysql php5 php5-memcached memcached
 sudo service memcached start
</code></pre></li>
<li><p>安裝mysql</p>

<pre><code>sudo apt-get install mysql-server mysql-client libmysqlclient-dev
</code></pre></li>
</ol>


<h2>安裝 Solr 環境 在search機器上</h2>

<p>我使用tomcat 安裝會有問題(<strong>missing core name in path</strong>)....所以我最後手動安裝</p>

<ol>
<li><p>安裝 java</p>

<pre><code> sudo apt-get -y install openjdk-7-jdk
 mkdir /usr/java
 ln -s /usr/lib/jvm/java-7-openjdk-amd64 /usr/java/default
</code></pre></li>
<li><p>安裝Solr</p>

<pre><code> cd /opt
 wget http://archive.apache.org/dist/lucene/solr/4.7.2/solr-4.7.2.tgz
 tar -xvf solr-4.7.2.tgz
 cp -R solr-4.7.2/example /opt/solr
 cd /opt/solr
 java -jar start.jar
</code></pre></li>
<li><p>編輯 jetty</p>

<pre><code> sudo vim /etc/default/jetty 
</code></pre>

<p> 加入</p>

<pre><code> NO_START=0 # Start on boot
 JAVA_OPTIONS="-Dsolr.solr.home=/opt/solr/solr $JAVA_OPTIONS"
 JAVA_HOME=/usr/java/default
 JETTY_HOME=/opt/solr
 JETTY_USER=solr
 JETTY_LOGS=/opt/solr/logs
</code></pre>

<p> 下指令</p>

<pre><code> vim /opt/solr/etc/jetty-logging.xml
</code></pre>

<p> 加入</p>

<pre><code> &lt;?xml version="1.0"?&gt;
   &lt;!DOCTYPE Configure PUBLIC "-//Mort Bay Consulting//DTD Configure//EN" "http://jetty.mortbay.org/configure.dtd"&gt;
   &lt;!-- =============================================================== --&gt;
   &lt;!-- Configure stderr and stdout to a Jetty rollover log file --&gt;
   &lt;!-- this configuration file should be used in combination with --&gt;
   &lt;!-- other configuration files.  e.g. --&gt;
   &lt;!--    java -jar start.jar etc/jetty-logging.xml etc/jetty.xml --&gt;
   &lt;!-- =============================================================== --&gt;
   &lt;Configure id="Server" class="org.mortbay.jetty.Server"&gt;

       &lt;New id="ServerLog" class="java.io.PrintStream"&gt;
         &lt;Arg&gt;
           &lt;New class="org.mortbay.util.RolloverFileOutputStream"&gt;
             &lt;Arg&gt;&lt;SystemProperty name="jetty.logs" default="."/&gt;/yyyy_mm_dd.stderrout.log&lt;/Arg&gt;
             &lt;Arg type="boolean"&gt;false&lt;/Arg&gt;
             &lt;Arg type="int"&gt;90&lt;/Arg&gt;
             &lt;Arg&gt;&lt;Call class="java.util.TimeZone" name="getTimeZone"&gt;&lt;Arg&gt;GMT&lt;/Arg&gt;&lt;/Call&gt;&lt;/Arg&gt;
             &lt;Get id="ServerLogName" name="datedFilename"/&gt;
           &lt;/New&gt;
         &lt;/Arg&gt;
       &lt;/New&gt;

       &lt;Call class="org.mortbay.log.Log" name="info"&gt;&lt;Arg&gt;Redirecting stderr/stdout to &lt;Ref id="ServerLogName"/&gt;&lt;/Arg&gt;&lt;/Call&gt;
       &lt;Call class="java.lang.System" name="setErr"&gt;&lt;Arg&gt;&lt;Ref id="ServerLog"/&gt;&lt;/Arg&gt;&lt;/Call&gt;
       &lt;Call class="java.lang.System" name="setOut"&gt;&lt;Arg&gt;&lt;Ref id="ServerLog"/&gt;&lt;/Arg&gt;&lt;/Call&gt;&lt;/Configure&gt;
</code></pre></li>
<li><p>加上 User: solr</p>

<pre><code> sudo useradd -d /opt/solr -s /sbin/false solr
 sudo chown solr:solr -R /opt/solr
</code></pre></li>
<li><p>安裝 jetty</p>

<pre><code> sudo wget -O /etc/init.d/jetty http://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk/jetty-distribution/src/main/resources/bin/jetty.sh
 sudo chmod a+x /etc/init.d/jetty
 sudo update-rc.d jetty defaults
</code></pre></li>
<li><p>跑起來</p>

<pre><code> sudo /etc/init.d/jetty start
</code></pre></li>
<li><p>設定檔</p>

<pre><code> cd /opt/solr/solr
</code></pre></li>
<li><p>把在sunspot改好的schema.xml 寫到這邊</p>

<pre><code> vim /opt/solr/solr/collection1/conf/schema.xml
</code></pre>

<p> 寫上下面那些，因為我要支援中文字詞，所以我有改過一些</p>

<p> 下面這個很重要，如果不改的話，會有連線內容錯誤之類的訊息</p>

<pre><code> &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 --&gt;
 &lt;!--  
  This is the Solr schema file. This file should be named "schema.xml" and
  should be in the conf directory under the solr home
  (i.e. ./solr/conf/schema.xml by default) 
  or located where the classloader for the Solr webapp can find it.

  This example schema is the recommended starting point for users.
  It should be kept correct and concise, usable out-of-the-box.

  For more information, on how to customize this file, please see
  http://wiki.apache.org/solr/SchemaXml

  PERFORMANCE NOTE: this schema includes many optional features and should not
  be used for benchmarking.  To improve performance one could
   - set stored="false" for all fields possible (esp large fields) when you
     only need to search on the field but don't need to return the original
     value.
   - set indexed="false" if you don't need to search on the field, but only
     return the field as a result of searching on other indexed fields.
   - remove all unneeded copyField statements
   - for best index size and searching performance, set "index" to false
     for all general text fields, use copyField to copy them to the
     catchall "text" field, and use that for searching.
   - For maximum indexing performance, use the StreamingUpdateSolrServer
     java client.
   - Remember to run the JVM in server mode, and use a higher logging level
     that avoids logging every request
 --&gt;
 &lt;schema name="sunspot" version="1.0"&gt;
   &lt;types&gt;
     &lt;!-- field type definitions. The "name" attribute is
        just a label to be used by field definitions.  The "class"
        attribute and any other attributes determine the real
        behavior of the fieldType.
          Class names starting with "solr" refer to java classes in the
        org.apache.solr.analysis package.
     --&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="string" class="solr.StrField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="tdouble" class="solr.TrieDoubleField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="rand" class="solr.RandomSortField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="text" class="solr.TextField" omitNorms="false"&gt;
       &lt;analyzer&gt;
         &lt;tokenizer class="solr.CJKTokenizerFactory"/&gt;
         &lt;filter class="solr.StandardFilterFactory"/&gt;
         &lt;filter class="solr.LowerCaseFilterFactory"/&gt;
         &lt;filter class="solr.PorterStemFilterFactory"/&gt;
         &lt;filter class="solr.NGramFilterFactory" minGramSize="2" maxGramSize="15"/&gt;
       &lt;/analyzer&gt;

       &lt;analyzer type="query"&gt;
         &lt;tokenizer class="solr.CJKTokenizerFactory"/&gt;
         &lt;filter class="solr.StandardFilterFactory"/&gt;
         &lt;filter class="solr.LowerCaseFilterFactory"/&gt;
       &lt;/analyzer&gt;

     &lt;/fieldType&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="boolean" class="solr.BoolField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="date" class="solr.DateField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="sdouble" class="solr.SortableDoubleField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="sfloat" class="solr.SortableFloatField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="sint" class="solr.SortableIntField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="slong" class="solr.SortableLongField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="tint" class="solr.TrieIntField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="tfloat" class="solr.TrieFloatField" omitNorms="true"/&gt;
     &lt;!-- *** This fieldType is used by Sunspot! *** --&gt;
     &lt;fieldType name="tdate" class="solr.TrieDateField" omitNorms="true"/&gt;

     &lt;!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. --&gt;
     &lt;fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/&gt;
   &lt;/types&gt;
   &lt;fields&gt;
     &lt;!-- Valid attributes for fields:
      name: mandatory - the name for the field
      type: mandatory - the name of a previously defined type from the
        &lt;types&gt; section
      indexed: true if this field should be indexed (searchable or sortable)
      stored: true if this field should be retrievable
      compressed: [false] if this field should be stored using gzip compression
        (this will only apply if the field type is compressable; among
        the standard field types, only TextField and StrField are)
      multiValued: true if this field may contain multiple values per document
      omitNorms: (expert) set to true to omit the norms associated with
        this field (this disables length normalization and index-time
        boosting for the field, and saves some memory).  Only full-text
        fields or fields that need an index-time boost need norms.
      termVectors: [false] set to true to store the term vector for a
        given field.
        When using MoreLikeThis, fields used for similarity should be
        stored for best performance.
      termPositions: Store position information with the term vector.  
        This will increase storage costs.
      termOffsets: Store offset information with the term vector. This 
        will increase storage costs.
      default: a value that should be used if no value is specified
        when adding a document.
    --&gt;
     &lt;!-- *** This field is used by Sunspot! *** --&gt;
     &lt;field name="id" stored="true" type="string" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This field is used by Sunspot! *** --&gt;
     &lt;field name="type" stored="false" type="string" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This field is used by Sunspot! *** --&gt;
     &lt;field name="class_name" stored="false" type="string" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This field is used by Sunspot! *** --&gt;
     &lt;field name="text" stored="false" type="string" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This field is used by Sunspot! *** --&gt;
     &lt;field name="lat" stored="true" type="tdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This field is used by Sunspot! *** --&gt;
     &lt;field name="lng" stored="true" type="tdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="random_*" stored="false" type="rand" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="_local*" stored="false" type="tdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_text" stored="false" type="text" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_texts" stored="true" type="text" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_b" stored="false" type="boolean" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_bm" stored="false" type="boolean" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_bs" stored="true" type="boolean" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_bms" stored="true" type="boolean" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_d" stored="false" type="date" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_dm" stored="false" type="date" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ds" stored="true" type="date" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_dms" stored="true" type="date" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_e" stored="false" type="sdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_em" stored="false" type="sdouble" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_es" stored="true" type="sdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ems" stored="true" type="sdouble" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_f" stored="false" type="sfloat" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_fm" stored="false" type="sfloat" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_fs" stored="true" type="sfloat" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_fms" stored="true" type="sfloat" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_i" stored="false" type="sint" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_im" stored="false" type="sint" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_is" stored="true" type="sint" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ims" stored="true" type="sint" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_l" stored="false" type="slong" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_lm" stored="false" type="slong" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ls" stored="true" type="slong" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_lms" stored="true" type="slong" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_s" stored="false" type="string" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_sm" stored="false" type="string" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ss" stored="true" type="string" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_sms" stored="true" type="string" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_it" stored="false" type="tint" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_itm" stored="false" type="tint" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_its" stored="true" type="tint" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_itms" stored="true" type="tint" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ft" stored="false" type="tfloat" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ftm" stored="false" type="tfloat" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_fts" stored="true" type="tfloat" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ftms" stored="true" type="tfloat" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_dt" stored="false" type="tdate" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_dtm" stored="false" type="tdate" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_dts" stored="true" type="tdate" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_dtms" stored="true" type="tdate" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_textv" stored="false" termVectors="true" type="text" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_textsv" stored="true" termVectors="true" type="text" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_et" stored="false" termVectors="true" type="tdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_etm" stored="false" termVectors="true" type="tdouble" multiValued="true" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_ets" stored="true" termVectors="true" type="tdouble" multiValued="false" indexed="true"/&gt;
     &lt;!-- *** This dynamicField is used by Sunspot! *** --&gt;
     &lt;dynamicField name="*_etms" stored="true" termVectors="true" type="tdouble" multiValued="true" indexed="true"/&gt;

     &lt;!-- Type used to index the lat and lon components for the "location" FieldType --&gt;
     &lt;dynamicField name="*_coordinate"  type="tdouble" indexed="true"  stored="false" multiValued="false"/&gt;
     &lt;dynamicField name="*_p" type="location" indexed="true" stored="true" multiValued="false"/&gt;

     &lt;dynamicField name="*_ll" stored="false" type="location" multiValued="false" indexed="true"/&gt;
     &lt;dynamicField name="*_llm" stored="false" type="location" multiValued="true" indexed="true"/&gt;
     &lt;dynamicField name="*_lls" stored="true" type="location" multiValued="false" indexed="true"/&gt;
     &lt;dynamicField name="*_llms" stored="true" type="location" multiValued="true" indexed="true"/&gt;

     &lt;!-- required by Solr 4 --&gt;
     &lt;field name="_version_" type="string" indexed="true" stored="true" multiValued="false" /&gt;
   &lt;/fields&gt;

   &lt;!-- Field to use to determine and enforce document uniqueness.
       Unless this field is marked with required="false", it will be a required field
    --&gt;
   &lt;uniqueKey&gt;id&lt;/uniqueKey&gt;
   &lt;!-- field for the QueryParser to use when an explicit fieldname is absent --&gt;
   &lt;defaultSearchField&gt;text&lt;/defaultSearchField&gt;
   &lt;!-- SolrQueryParser configuration: defaultOperator="AND|OR" --&gt;
   &lt;solrQueryParser defaultOperator="AND"/&gt;
   &lt;!-- copyField commands copy one field to another at the time a document
         is added to the index.  It's used either to index the same field differently,
         or to add multiple fields to the same field for easier/faster searching.  --&gt;
 &lt;/schema&gt;
</code></pre></li>
<li><p>改好別忘重啟</p>

<pre><code> sudo /etc/init.d/jetty restart
</code></pre></li>
<li><p>但是....目前不是用Chef安裝環境....所以如果要改config檔，就是要到這個地方去修改</p>

<p><strong>/opt/solr/solr/collection1/conf</strong></p></li>
</ol>


<h2>專案上的程式碼</h2>

<ol>
<li>基本上，專案什麼都不用動，因為Sunspot都幫你做掉了</li>
</ol>


<p>你只需要改 <strong>config/sunspot.yml</strong></p>

<p>原先的設定：</p>

<pre><code>production:
  solr:
    hostname: localhost
    port: 8983
    log_level: INFO
    path: /solr/production
    # read_timeout: 2
    # open_timeout: 0.5

development:
  solr:
    hostname: localhost
    port: 8982
    log_level: INFO
    path: /solr/development


test:
  solr:
    hostname: localhost
    port: 8981
    log_level: WARNING
    path: /solr/test
</code></pre>

<p> 把它改成：</p>

<pre><code> production:
  solr:
    hostname: 33.33.13.12
    port: 8983
    log_level: INFO
    path: /solr
    # read_timeout: 2
    # open_timeout: 0.5

development:
  solr:
    hostname: localhost
    port: 8982
    log_level: INFO
    path: /solr/development


test:
  solr:
    hostname: localhost
    port: 8981
    log_level: WARNING
    path: /solr/test
</code></pre>

<p>恭喜完成！</p>

<h2>Capistrano Deployment</h2>

<p>如果你參考我的 Sunspot本機端 Deploy的話，</p>

<p>我試過幾種方法，試著讓app機器，可以去search機器 開關solr....(</p>

<pre><code>sudo /etc/init.d/jetty start
</code></pre>

<p>但是小弟對於Capistrano才疏學淺，實在無法達成</p>

<p>所以我的Deploy Code就先把 solr:start 和 solr:stop 先拿掉</p>

<p>所以原先，我是這樣寫的</p>

<p><strong>/lib/capistrano/taks/sunspot.cap</strong></p>

<pre><code>namespace :deploy do
  before :updated, :setup_solr_data_dir do
    on roles(:app) do
      unless test "[ -d #{shared_path}/solr/data ]"
        execute :mkdir, "-p #{shared_path}/solr/data"
      end
    end
  end
end

namespace :solr do

  %w[start stop].each do |command|
    desc "#{command} solr"
    task command do
      on roles(:app) do
        solr_pid = "#{shared_path}/pids/sunspot-solr.pid"
        if command == "start" or (test "[ -f #{solr_pid} ]" and test "kill -0 $( cat #{solr_pid} )")
          within current_path do
            with rails_env: fetch(:rails_env, 'production') do
              execute :bundle, 'exec', 'sunspot-solr', command, "--port=8983 --data-directory=#{shared_path}/solr/data --pid-dir=#{shared_path}/pids --solr-home=#{release_path}/solr"
            end
          end
        end
      end
    end
  end

  desc "reindex solr"
  task :restart do
    invoke 'solr:reindex'
  end

  after 'deploy:finished', 'solr:restart'

  desc "reindex the whole solr database"

  task :reindex do
    invoke 'solr:stop' 
    on roles(:app) do
      execute :rm, "-rf #{shared_path}/solr/data"
    end
    invoke 'solr:start'
    sleep 10
    on roles(:app) do
      within current_path do
        with rails_env: fetch(:rails_env, 'production') do
          info "Reindexing Solr database"
          execute :bundle, 'exec', :rake, 'sunspot:solr:reindex[,,true]'
        end
      end
    end
  end

end
</code></pre>

<p>現在變成：</p>

<pre><code>namespace :deploy do
  before :updated, :setup_solr_data_dir do
    on roles(:app) do
      unless test "[ -d #{shared_path}/solr/data ]"
        execute :mkdir, "-p #{shared_path}/solr/data"
      end
    end
  end
end

namespace :solr do

  %w[start stop].each do |command|
    desc "#{command} solr"
    task command do
      on roles(:app) do
        solr_pid = "#{shared_path}/pids/sunspot-solr.pid"
        if command == "start" or (test "[ -f #{solr_pid} ]" and test "kill -0 $( cat #{solr_pid} )")
          within current_path do
            with rails_env: fetch(:rails_env, 'production') do
              execute :bundle, 'exec', 'sunspot-solr', command, "--port=8983 --data-directory=#{shared_path}/solr/data --pid-dir=#{shared_path}/pids --solr-home=#{release_path}/solr" # 就算加上 --bind-address=33.33.13.12  也在在本機端跑
            end
          end
        end
      end

      #  嘗試直接從本機去重開 search機器，但是都不work，找解答ing
      #on %w{apps@33.33.13.12} do |host|
      #    as 'apps' do
      #      execute "sudo /etc/init.d/jetty #{command}"
      #    end
      #end
    end
  end

  desc "reindex solr"
  task :restart do
    invoke 'solr:reindex'
  end

  after 'deploy:finished', 'solr:restart'

  desc "reindex the whole solr database"

  task :reindex do
    #invoke 'solr:stop' #這指令是操控本機的solr
    on roles(:app) do
      execute :rm, "-rf #{shared_path}/solr/data"
    end
    #invoke 'solr:start' #這指令是操控本機的solr
    sleep 10
    on roles(:app) do
      within current_path do
        with rails_env: fetch(:rails_env, 'production') do
          info "Reindexing Solr database"
          execute :bundle, 'exec', :rake, 'sunspot:solr:reindex[,,true]'
        end
      end
    end
  end

end
</code></pre>

<h2>恭喜完成！</h2>

<h3>ps. 如果你想要讓在vagrant裡頭app可以存取Mac裡頭的DB</h3>

<p>請把把 host改成 10.0.2.2</p>

<pre><code>host: 10.0.2.2
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HowTo] Setup Sunspot in Rails 4 and Deploy to Ubuntu12.04 using Capistrano 3]]></title>
    <link href="http://ccaloha.cc/blog/2014/04/30/howto-setup-sunspot-in-rails4-and-deploy-to-ubuntu12-dot-04-using-capistrano/"/>
    <updated>2014-04-30T10:26:44+08:00</updated>
    <id>http://ccaloha.cc/blog/2014/04/30/howto-setup-sunspot-in-rails4-and-deploy-to-ubuntu12-dot-04-using-capistrano</id>
    <content type="html"><![CDATA[<h1>[HOWTO] Setup Sunspot in Rails 4 and Deploy to Ubuntu 12.04 using</h1>

<p>Capistrano3.</p>

<p>最近利用空閒時間，練習自己架設一個購物網站，其中，我想說一般網站都會有搜尋的功能，</p>

<p>如果在後台，可以使用Ransack來實作，但是那是給管理者搜尋某些表相關欄位所使用，</p>

<p>換句話說，在訂單的table中，你可以使用Ransack搜尋，建立每一個獨立欄位搜尋input，或是建立和這訂單table相關的每個獨立欄位的搜尋input</p>

<p>但是，如果想要在網站建立一個搜尋引擎，該要怎麼做？</p>

<p>搜尋引擎是只要輸入一個資料，你就可以搜尋到搜尋不同欄位，</p>

<p>我查了The Ruby toolbox，第一名被使用的就是Sunspot:
<a href="https://github.com/outoftime/sunspot">https://github.com/outoftime/sunspot</a> !</p>

<p>於是乎，就來try and error吧</p>

<!--more-->


<h2>Part1 - Local Machine testing</h2>

<h3>1. In your Gemfile</h3>

<pre><code>gem 'sunspot_rails'
</code></pre>

<h3>2. Bundle it.</h3>

<pre><code>bundle install
</code></pre>

<h3>3. Generate a default configuration file</h3>

<pre><code>rails g sunspot_rails:fileinstall
</code></pre>

<h3>4. Model where you want to be searched</h3>

<p>假設是你的Product 要給大家搜尋</p>

<p>請在 <em>app/models/product.rb</em></p>

<p>假設你有欄位, name, content, html_block, slug(產品好看的url用) ,is_added(上架與否)加入</p>

<pre><code>searchable do 
  text :name, :content, :html_block, :slug
  time :commentsreated_at
  boolean :is_added
end
</code></pre>

<h3>5. Routing</h3>

<p>到<em>route.rb</em>上，這樣你的localhost:3000/search就是搜尋在用的link</p>

<pre><code>get '/search', to: 'pages#search'
</code></pre>

<h3>6. View (search bar)</h3>

<p>因為我想要把搜尋bar一直放在網頁右上角，和使用者基本操作放在一起(例如登入...等)</p>

<p>所以我在我的<em>_user_nav.html.slim</em> 加上</p>

<pre><code>= form_tag search_path, :method =&gt; :get , class: 'search-bar' do
  = toext_field_tag :search, params[:search]
  = submit_tag "Search", :namee =&gt; nil
</code></pre>

<h3>7. Controller</h3>

<p>最後，當form 做get動作後，就交給 pages_controller.rb</p>

<pre><code>def search
  @search = Product.solr_search do
  fulltext Part1arams[:search]
  with(:is_added, true)
  with(:created_at).less_than(searchTime.zone.now)
  end
  @related_products = @search.results
end
</code></pre>

<p> ps.這邊有個小關卡，那就是如果你和我一樣有使用ransack</p>

<p> 如果<strong>Product.solr_search</strong> 這邊你是寫Product.search會報錯</p>

<p> solution，也就是我上面寫的那種，是參考自：
<a href="https://github.com/sunspot/sunspot/blob/master/sunspot_rails/lib/sunspot/rails/searchable.rb#L124">https://github.com/sunspot/sunspot/blob/master/sunspot_rails/lib/sunspot/rails/searchable.rb#L124</a></p>

<h3>8. View</h3>

<p> controller完之後，當然要有一個view去接，<em>serach.html.slim</em></p>

<pre><code>.home-block
  h2 class="home-block-heading"
    span 搜尋結果
  .row.clearfix
    - @related_products.each do |product|
      .col-sm-4 style="padding-bottom:0"
        figure
          figcaption
            strong #{product.name}
            span   #{product.content}
            em   #{product.selling_price}figure 
</code></pre>

<h3>9. Using commend line run Sunspot service</h3>

<p>在Local machine測試</p>

<pre><code>rake sunspot:solr:start
rake sunspot:reindex
</code></pre>

<p>這樣基本上，就是搜尋在用的可以開始搜尋了！ (中文也會通歐～～)</p>

<p>ps. 在code commit上，</p>

<p>I didn't add folder *solr/**  into code tracking.</p>

<p>I only add <em>sunspot.yml</em> into my github.</p>

<h2>Part2 - Deployment</h2>

<h3>1. Make sure that your server installed JAVA.</h3>

<p>if not do this</p>

<pre><code>sudo apt-get install openjdk-7-jre
</code></pre>

<p>or you will got ...</p>

<pre><code>You need a Java Runtime Environment to run the Solr server
Sunspot:the:Solr::Server::JavaMissing
</code></pre>

<h3>2. Cap</h3>

<p>thanks to <a href="https://gist.github.com/muscardinus/8884801">https://gist.github.com/muscardinus/8884801</a></p>

<p>create sunspot.cap under <em>lib/capistrano/tasks/sunspot.cap</em></p>

<script src="https://gist.github.com/muscardinus/8884801.js"></script>


<h3>3. Config sunspot.yml</h3>

<pre><code>production:
  solr:
    hostname: loca    port: 8983
    log_level: WARNING
    path: /solr/default
    # read_timeout: 2
    # open_timeout: 0.5

development:
  solr:
    hostname: localhost
    port: 8982
    log_level: INFO
    path: /solr/development

test:
  solr:
    hostname: localhost
    port: 8981
    log_level: WARNING
    path: /solr/thisest
</code></pre>

<h4>IMPORTANT:</h4>

<p><em>path: /solr/default</em> instead of path: <em>/solr/productionon</em></p>

<h3>3. Done</h3>

<pre><code>cap production deploy
</code></pre>

<h3>Part3- Troubleshotting</h3>

<p>if you got error message like I did,</p>

<pre><code>F, [2014-04-29T23:47:44.848055 #23803] FATAL -- : 
RSolr::Error::Http (RSolr::Error::Http - 4404 Not Found
Error:     Not Found

Request Data:
"fq=type%3AProduct&amp;fqfq=is_added_b%3Atrue&amp;fq=created_at_d%3A%7B%2A+TO+2014%5C-04%5C-29T15%5C%3A47%5C%3A44Z%7D&amp;q=%E4%B8%8A%E8%A1%A3&amp;fl=%2A+score&amp;qf=name_text+content_text+html_block_text+slug_text&amp;defType=edismax&amp;start=0&amp;rows=30"

Backtrace:
/home/Deploymenty/ectest/shared/bundle/ruby/2.0.0/gems/rsolr-1.0.10/lib/rsolr/client.rb:283:in
`adapt_response'
/home/deploy/ectest/shared/bundle/ruby/2.0.0/gems/rsolr-1.0.10/lib/rsolr/client.rb:190:in
`execute'
/home/deploy/ectest/shared/bundlee/ruby/2.0.0/gems/rsolr-1.0.10/lib/rsolr/client.rb:176:in
`send_and_receive'
/home/deploy/ectest/shared/bundle/ruby/2.0.0/gems/sunspot_rails-2.1.0/lib/sunspot_railsot/rails/solr_instrumentation.rb:16:in
`block in send_and_receive_with_as_instrumentation'
/home/deploy/ectest/shared/bundle/ruby/2.0.0/gems/activesupport-4.0.2/lib/active_support/notifications.rb:159:in
`block in instrument'
/home/deploy/ectestest/shared/bundle/ruby/2.0.0/gems/activesupport-4.0.2/lib/active_support/notifications/instrumenter.rb:20:in
`instrument'
/home/deploy/ectest/shared/bundlendle/ruby/2.0.0/gems/activesupport-4.0.2/lib/active_support/notifications.rb:159:in
`instrument'
</code></pre>

<p>Solution:</p>

<pre><code>1. ps aux | grep solr to get solr process ID
2. sudo kill &lt;ID&gt;, &lt;ID&gt; is the ID you found from 1
3. rm -r &lt;path/to/solr&gt;, remove the solr directory inside your
   project to remove all of previous indexes
4. RAILS_ENV=production bundle exec rake sunspot:solr:start
5. Change the path to /solr/default inside config/sunspot.yml
6. RAILS_ENV=production bundle exec rake sunspot:solr:reindex
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup both SSH and SFTP are able to login at same time in Ubuntu]]></title>
    <link href="http://ccaloha.cc/blog/2014/04/11/setup-both-ssh-and-sftp-are-able-to-login-at-same-time-in-ubuntu/"/>
    <updated>2014-04-11T12:24:15+08:00</updated>
    <id>http://ccaloha.cc/blog/2014/04/11/setup-both-ssh-and-sftp-are-able-to-login-at-same-time-in-ubuntu</id>
    <content type="html"><![CDATA[<p>這篇文章主要是參考自
<a href="http://blog.srmklive.com/2013/04/24/how-to-setup-sftp-server-ftp-over-ssh-in-ubuntu/">http://blog.srmklive.com/2013/04/24/how-to-setup-sftp-server-ftp-over-ssh-in-ubuntu/</a>
但是，我沒辦法同時使用ssh和sftp</p>

<!--more-->


<h1>Edit ssh config</h1>

<pre><code>sudo vim /etc/ssh/sshd_config
</code></pre>

<h1>將底下那行貼上</h1>

<pre><code>PasswordAuthentication no
Subsystem sftp internal-sftp -f AUTH -1 VERBOSE
AllowGroups newuser 
AllowTCPForwarding no
X11Forwarding no
</code></pre>

<h1>Configure IPtable(讓ssh可以通過)</h1>

<pre><code>sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
</code></pre>

<h2>新增User</h2>

<pre><code>sudo adduser newuser
</code></pre>

<h2>將你要用來ssh或SFTP的電腦public key輸入到...</h2>

<p>In local machine(我是用Mac)</p>

<pre><code>scp ~/.ssh/id_rsa.pub newuser@ip:~/
</code></pre>

<p>In server</p>

<pre><code>mkdir .ssh
cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
</code></pre>

<p>這樣就可以了！</p>
]]></content>
  </entry>
  
</feed>
