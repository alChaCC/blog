<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Capistrano | AlohaCC]]></title>
  <link href="http://ccaloha.cc/blog/categories/capistrano/atom.xml" rel="self"/>
  <link href="http://ccaloha.cc/"/>
  <updated>2015-11-15T20:14:34+08:00</updated>
  <id>http://ccaloha.cc/</id>
  <author>
    <name><![CDATA[Aloha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[HowTo] Setup Sunspot in Rails 4 and Deploy to Ubuntu12.04 using Capistrano 3]]></title>
    <link href="http://ccaloha.cc/blog/2014/04/30/howto-setup-sunspot-in-rails4-and-deploy-to-ubuntu12-dot-04-using-capistrano/"/>
    <updated>2014-04-30T10:26:44+08:00</updated>
    <id>http://ccaloha.cc/blog/2014/04/30/howto-setup-sunspot-in-rails4-and-deploy-to-ubuntu12-dot-04-using-capistrano</id>
    <content type="html"><![CDATA[<h1>[HOWTO] Setup Sunspot in Rails 4 and Deploy to Ubuntu 12.04 using</h1>

<p>Capistrano3.</p>

<p>最近利用空閒時間，練習自己架設一個購物網站，其中，我想說一般網站都會有搜尋的功能，</p>

<p>如果在後台，可以使用Ransack來實作，但是那是給管理者搜尋某些表相關欄位所使用，</p>

<p>換句話說，在訂單的table中，你可以使用Ransack搜尋，建立每一個獨立欄位搜尋input，或是建立和這訂單table相關的每個獨立欄位的搜尋input</p>

<p>但是，如果想要在網站建立一個搜尋引擎，該要怎麼做？</p>

<p>搜尋引擎是只要輸入一個資料，你就可以搜尋到搜尋不同欄位，</p>

<p>我查了The Ruby toolbox，第一名被使用的就是Sunspot:
<a href="https://github.com/outoftime/sunspot">https://github.com/outoftime/sunspot</a> !</p>

<p>於是乎，就來try and error吧</p>

<!--more-->


<h2>Part1 - Local Machine testing</h2>

<h3>1. In your Gemfile</h3>

<pre><code>gem 'sunspot_rails'
</code></pre>

<h3>2. Bundle it.</h3>

<pre><code>bundle install
</code></pre>

<h3>3. Generate a default configuration file</h3>

<pre><code>rails g sunspot_rails:fileinstall
</code></pre>

<h3>4. Model where you want to be searched</h3>

<p>假設是你的Product 要給大家搜尋</p>

<p>請在 <em>app/models/product.rb</em></p>

<p>假設你有欄位, name, content, html_block, slug(產品好看的url用) ,is_added(上架與否)加入</p>

<pre><code>searchable do 
  text :name, :content, :html_block, :slug
  time :commentsreated_at
  boolean :is_added
end
</code></pre>

<h3>5. Routing</h3>

<p>到<em>route.rb</em>上，這樣你的localhost:3000/search就是搜尋在用的link</p>

<pre><code>get '/search', to: 'pages#search'
</code></pre>

<h3>6. View (search bar)</h3>

<p>因為我想要把搜尋bar一直放在網頁右上角，和使用者基本操作放在一起(例如登入...等)</p>

<p>所以我在我的<em>_user_nav.html.slim</em> 加上</p>

<pre><code>= form_tag search_path, :method =&gt; :get , class: 'search-bar' do
  = toext_field_tag :search, params[:search]
  = submit_tag "Search", :namee =&gt; nil
</code></pre>

<h3>7. Controller</h3>

<p>最後，當form 做get動作後，就交給 pages_controller.rb</p>

<pre><code>def search
  @search = Product.solr_search do
  fulltext Part1arams[:search]
  with(:is_added, true)
  with(:created_at).less_than(searchTime.zone.now)
  end
  @related_products = @search.results
end
</code></pre>

<p> ps.這邊有個小關卡，那就是如果你和我一樣有使用ransack</p>

<p> 如果<strong>Product.solr_search</strong> 這邊你是寫Product.search會報錯</p>

<p> solution，也就是我上面寫的那種，是參考自：
<a href="https://github.com/sunspot/sunspot/blob/master/sunspot_rails/lib/sunspot/rails/searchable.rb#L124">https://github.com/sunspot/sunspot/blob/master/sunspot_rails/lib/sunspot/rails/searchable.rb#L124</a></p>

<h3>8. View</h3>

<p> controller完之後，當然要有一個view去接，<em>serach.html.slim</em></p>

<pre><code>.home-block
  h2 class="home-block-heading"
    span 搜尋結果
  .row.clearfix
    - @related_products.each do |product|
      .col-sm-4 style="padding-bottom:0"
        figure
          figcaption
            strong #{product.name}
            span   #{product.content}
            em   #{product.selling_price}figure 
</code></pre>

<h3>9. Using commend line run Sunspot service</h3>

<p>在Local machine測試</p>

<pre><code>rake sunspot:solr:start
rake sunspot:reindex
</code></pre>

<p>這樣基本上，就是搜尋在用的可以開始搜尋了！ (中文也會通歐～～)</p>

<p>ps. 在code commit上，</p>

<p>I didn't add folder *solr/**  into code tracking.</p>

<p>I only add <em>sunspot.yml</em> into my github.</p>

<h2>Part2 - Deployment</h2>

<h3>1. Make sure that your server installed JAVA.</h3>

<p>if not do this</p>

<pre><code>sudo apt-get install openjdk-7-jre
</code></pre>

<p>or you will got ...</p>

<pre><code>You need a Java Runtime Environment to run the Solr server
Sunspot:the:Solr::Server::JavaMissing
</code></pre>

<h3>2. Cap</h3>

<p>thanks to <a href="https://gist.github.com/muscardinus/8884801">https://gist.github.com/muscardinus/8884801</a></p>

<p>create sunspot.cap under <em>lib/capistrano/tasks/sunspot.cap</em></p>

<script src="https://gist.github.com/muscardinus/8884801.js"></script>


<h3>3. Config sunspot.yml</h3>

<pre><code>production:
  solr:
    hostname: loca    port: 8983
    log_level: WARNING
    path: /solr/default
    # read_timeout: 2
    # open_timeout: 0.5

development:
  solr:
    hostname: localhost
    port: 8982
    log_level: INFO
    path: /solr/development

test:
  solr:
    hostname: localhost
    port: 8981
    log_level: WARNING
    path: /solr/thisest
</code></pre>

<h4>IMPORTANT:</h4>

<p><em>path: /solr/default</em> instead of path: <em>/solr/productionon</em></p>

<h3>3. Done</h3>

<pre><code>cap production deploy
</code></pre>

<h3>Part3- Troubleshotting</h3>

<p>if you got error message like I did,</p>

<pre><code>F, [2014-04-29T23:47:44.848055 #23803] FATAL -- : 
RSolr::Error::Http (RSolr::Error::Http - 4404 Not Found
Error:     Not Found

Request Data:
"fq=type%3AProduct&amp;fqfq=is_added_b%3Atrue&amp;fq=created_at_d%3A%7B%2A+TO+2014%5C-04%5C-29T15%5C%3A47%5C%3A44Z%7D&amp;q=%E4%B8%8A%E8%A1%A3&amp;fl=%2A+score&amp;qf=name_text+content_text+html_block_text+slug_text&amp;defType=edismax&amp;start=0&amp;rows=30"

Backtrace:
/home/Deploymenty/ectest/shared/bundle/ruby/2.0.0/gems/rsolr-1.0.10/lib/rsolr/client.rb:283:in
`adapt_response'
/home/deploy/ectest/shared/bundle/ruby/2.0.0/gems/rsolr-1.0.10/lib/rsolr/client.rb:190:in
`execute'
/home/deploy/ectest/shared/bundlee/ruby/2.0.0/gems/rsolr-1.0.10/lib/rsolr/client.rb:176:in
`send_and_receive'
/home/deploy/ectest/shared/bundle/ruby/2.0.0/gems/sunspot_rails-2.1.0/lib/sunspot_railsot/rails/solr_instrumentation.rb:16:in
`block in send_and_receive_with_as_instrumentation'
/home/deploy/ectest/shared/bundle/ruby/2.0.0/gems/activesupport-4.0.2/lib/active_support/notifications.rb:159:in
`block in instrument'
/home/deploy/ectestest/shared/bundle/ruby/2.0.0/gems/activesupport-4.0.2/lib/active_support/notifications/instrumenter.rb:20:in
`instrument'
/home/deploy/ectest/shared/bundlendle/ruby/2.0.0/gems/activesupport-4.0.2/lib/active_support/notifications.rb:159:in
`instrument'
</code></pre>

<p>Solution:</p>

<pre><code>1. ps aux | grep solr to get solr process ID
2. sudo kill &lt;ID&gt;, &lt;ID&gt; is the ID you found from 1
3. rm -r &lt;path/to/solr&gt;, remove the solr directory inside your
   project to remove all of previous indexes
4. RAILS_ENV=production bundle exec rake sunspot:solr:start
5. Change the path to /solr/default inside config/sunspot.yml
6. RAILS_ENV=production bundle exec rake sunspot:solr:reindex
</code></pre>
]]></content>
  </entry>
  
</feed>
