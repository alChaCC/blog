<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby on Rails | AlohaCC]]></title>
  <link href="http://ccaloha.cc/blog/categories/ruby-on-rails/atom.xml" rel="self"/>
  <link href="http://ccaloha.cc/"/>
  <updated>2016-01-06T14:02:52+08:00</updated>
  <id>http://ccaloha.cc/</id>
  <author>
    <name><![CDATA[Aloha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Development Using Mongoid 5.0.0 - 2. How to use Aggregation to get pageview data]]></title>
    <link href="http://ccaloha.cc/blog/2016/01/06/ruby-on-rails-development-using-mongoid-5-dot-0-0-2-how-to-use-aggregation-to-get-pageview-data/"/>
    <updated>2016-01-06T13:57:37+08:00</updated>
    <id>http://ccaloha.cc/blog/2016/01/06/ruby-on-rails-development-using-mongoid-5-dot-0-0-2-how-to-use-aggregation-to-get-pageview-data</id>
    <content type="html"><![CDATA[<p>What is Aggregation ?</p>

<blockquote><p>Aggregations are operations that process data records and return computed results.</p></blockquote>

<p>In my opinion, it just like queries but it can do some operations step by step when processing the query just like a pipeline.</p>

<p><img src='https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/Ruby%20on%20Rails%20Development%20Using%20Mongoid%20-%202%20How%20to%20use%20Aggregation%20to%20get%20pageview%20data/%E8%9E%A2%E5%B9%95%E5%BF%AB%E7%85%A7%202016-01-05%2017.31.06.png' alt='MongoDB Aggregation'></p>

<p>if you want more details, please check <a href="https://docs.mongodb.org/manual/core/aggregation-introduction/">official documents</a></p>

<!--more-->


<p>Here are my models,</p>

<p><img src='https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/Ruby%20on%20Rails%20Development%20Using%20Mongoid%20-%202%20How%20to%20use%20Aggregation%20to%20get%20pageview%20data/model.png' alt='aggregation model example'></p>

<h2>Get Data using "match"</h2>

<p>If I want to find pageview from 2016/1/1 to 2016/1/5</p>

<p>```
sort_stage = {</p>

<pre><code>    '$sort' =&gt; { 'created_at' =&gt; 1 }
}
</code></pre>

<p>match_stage = {</p>

<pre><code>      '$match' =&gt; {
        "created_at" =&gt; {
          "$gte" =&gt; Time.parse('2016-01-01').beginning_of_day, 
          "$lte" =&gt; Time.parse('2016-01-05').end_of_day
        }
      }
    }
</code></pre>

<p>result = PageTracking.collection.aggregate([sort_stage,match_stage])
result.each do |page|
  puts page
end
```
Here is my result:</p>

<p><code>
{"_id"=&gt;BSON::ObjectId('568a1ef77db99bc968000002'), "pathname"=&gt;"/", "daily_total_count"=&gt;2, "created_at"=&gt;2016-01-03 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568a1ef77db99bc968000000'), "updated_at"=&gt;2016-01-04 07:27:51 UTC }
{"_id"=&gt;BSON::ObjectId('568b28ad7db99b1ae8000002'), "pathname"=&gt;"/", "daily_total_count"=&gt;1, "created_at"=&gt;2016-01-04 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568b28ad7db99b1ae8000000'), "updated_at"=&gt;2016-01-05 02:21:33 UTC}
{"_id"=&gt;BSON::ObjectId('568b28e67db99b1ae8000005'), "pathname"=&gt;"/", "daily_total_count"=&gt;3, "created_at"=&gt;2016-01-04 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003'), "updated_at"=&gt;2016-01-05 02:22:30 UTC}
{"_id"=&gt;BSON::ObjectId('568b7d307db99b9a30000011'), "pathname"=&gt;"/activities", "daily_total_count"=&gt;1, "created_at"=&gt;2016-01-04 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003'), "updated_at"=&gt;2016-01-05 08:22:08 UTC}
{"_id"=&gt;BSON::ObjectId('568b7d8e7db99b9a30000013'), "pathname"=&gt;"/activities/hadalabo01", "daily_total_count"=&gt;1, "created_at"=&gt;2016-01-04 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003'), "updated_at"=&gt;2016-01-05 08:23:42 UTC}
{"_id"=&gt;BSON::ObjectId('568b7e5e7db99b9a30000017'), "pathname"=&gt;"/beautybuzz", "daily_total_count"=&gt;1, "created_at"=&gt;2016-01-04 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003'), "updated_at"=&gt;2016-01-05 08:27:10 UTC}
{"_id"=&gt;BSON::ObjectId('568b78c07db99b9a30000001'), "pathname"=&gt;"/beautynews", "daily_total_count"=&gt;1, "created_at"=&gt;2016-01-04 16:00:00 UTC, "user_id"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003'), "updated_at"=&gt;2016-01-05 08:03:12 UTC}
</code></p>

<p>ps. I add a sort stage in front of match stage due to the official suggestion.<a href="https://docs.mongodb.org/manual/core/aggregation-pipeline-optimization/#sort-match-sequence-optimization">Aggregation Pipeline Optimization</a></p>

<h2>Group Data using "group"</h2>

<p>Oops, in fact, I want all records with <strong>pathname => '/'</strong> should be summed up to one record just like <strong>group_by</strong> in MySQL</p>

<p>So, we can add a new stage</p>

<p>```
group_stage = {</p>

<pre><code>      "$group" =&gt; {
        "_id" =&gt; {
          "pathname" =&gt; "$pathname"
        },
        "page_count" =&gt; { "$sum" =&gt; "$daily_total_count" }
      }
     }
</code></pre>

<p>result = PageTracking.collection.aggregate([sort_stage,match_stage,group_stage])</p>

<p>result.each do |page|
  puts page
end</p>

<p>```</p>

<p>which mean we can group by "pathname" and when we do grouping we can sum all daily_total_count into "page_count"</p>

<p>Here is my result</p>

<p><code>
{"_id"=&gt;{"pathname"=&gt;"/beautybuzz"}, "page_count"=&gt;1}
{"_id"=&gt;{"pathname"=&gt;"/activities/hadalabo01"}, "page_count"=&gt;1}
{"_id"=&gt;{"pathname"=&gt;"/activities"}, "page_count"=&gt;1}
{"_id"=&gt;{"pathname"=&gt;"/beautynews"}, "page_count"=&gt;1}
{"_id"=&gt;{"pathname"=&gt;"/"}, "page_count"=&gt;6}
</code></p>

<h2>Add more information while grouping Data using "push"</h2>

<p>Ok, great! But, I got an another requirement, Hi, Aloha, Can you tell me that who see each pages?</p>

<p>Easy, let's add some codes in group_stage</p>

<p>```
group_stage = {</p>

<pre><code>      "$group" =&gt; {
        "_id" =&gt; {
          "pathname" =&gt; "$pathname"
        },
        "page_count" =&gt; { "$sum" =&gt; "$daily_total_count" },
        "users" =&gt; {
          "$push" =&gt; {
            "user" =&gt; "$user_id"
          }
        }
      }
     }
</code></pre>

<p>result = PageTracking.collection.aggregate([sort_stage,match_stage,group_stage])</p>

<p>result.each do |page|
  puts page
end</p>

<p>```</p>

<p>Here is my result</p>

<p><code>
{"_id"=&gt;{"pathname"=&gt;"/beautybuzz"}, "page_count"=&gt;1, "users"=&gt;[{"user"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003')}]}
{"_id"=&gt;{"pathname"=&gt;"/activities/hadalabo01"}, "page_count"=&gt;1, "users"=&gt;[{"user"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003')}]}
{"_id"=&gt;{"pathname"=&gt;"/activities"}, "page_count"=&gt;1, "users"=&gt;[{"user"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003')}]}
{"_id"=&gt;{"pathname"=&gt;"/beautynews"}, "page_count"=&gt;1, "users"=&gt;[{"user"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003')}]}
{"_id"=&gt;{"pathname"=&gt;"/"}, "page_count"=&gt;6, "users"=&gt;[{"user"=&gt;BSON::ObjectId('568a1ef77db99bc968000000')}, {"user"=&gt;BSON::ObjectId('568b28ad7db99b1ae8000000')}, {"user"=&gt;BSON::ObjectId('568b28e67db99b1ae8000003')}]}
</code></p>

<p>Cool, our aggregation run smoothly.</p>

<h2>Aggregate Big Data</h2>

<p>After 3 months, we found that some fetch pageview operations will fail.</p>

<p>Oops, since these fetch operations use big time range (ex: get pageview data from 2015/9/1 ~ 2016/1/1)</p>

<p>```
match_stage = {</p>

<pre><code>      '$match' =&gt; {
        "created_at" =&gt; {
          "$gte" =&gt; Time.parse('2015-09-01').beginning_of_day, 
          "$lte" =&gt; Time.parse('2016-01-01').end_of_day
        }
      }
    }
</code></pre>

<p>result = PageTracking.collection.aggregate([sort_stage,match_stage,group_stage])</p>

<p>result.each do |page|
  puts page
end</p>

<p>```</p>

<p>I got this error message:</p>

<p><code>
aggregate | FAILED | exception: Exceeded memory limit for $group, but didn't allow external sort. Pass allowDiskUse:true to opt in. (16945) | 9.955263s
Mongo::Error::OperationFailure: exception: Exceeded memory limit for $group, but didn't allow external sort. Pass allowDiskUse:true to opt in. (16945)
</code></p>

<p>How can we solve this problem?</p>

<p>Just like message says, add <strong>allowDiskUse:true</strong> to it.</p>

<p>```
result = PageTracking.collection.aggregate(</p>

<pre><code>        [sort_stage,match_stage,group_stage],
        :allow_disk_use =&gt; true
      )
</code></pre>

<p>result.each do |page|
  puts page
end
```</p>

<p>Yay, bug fixed.</p>

<p><code>
...
you will got a lots of data ....
...
</code></p>

<h2>Limit data using "limit"</h2>

<p>if you just want 1000 data pass to next stage</p>

<p>```
sort_stage = {</p>

<pre><code>    '$sort' =&gt; { 'created_at' =&gt; -1 }
}
</code></pre>

<p>limit_stage = {</p>

<pre><code>  '$limit' =&gt; 1000
}
</code></pre>

<p>result = UserPageTracking.collection.aggregate(</p>

<pre><code>  [sort_stage, limit_stage , match_stage, group_stage],
  :allow_disk_use =&gt; true
)
</code></pre>

<p>result.each do |page|
  puts page
end
```</p>

<h2>Only want some specific data using "project"</h2>

<p>If fact, we don't need created_at, updated_at attributes in group stage, so we can ...</p>

<p>```
project_stage =</p>

<pre><code>  { 
    "$project" =&gt; { user_id: 1, pathname: 1, daily_total_count: 1}
  }
</code></pre>

<p>result = PageTracking.collection.aggregate(</p>

<pre><code>        [sort_stage,match_stage, project_stage, group_stage]
      )
</code></pre>

<p>result.each do |page|
  puts page
end</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Development using Mongoid 5.0.0 - 1. Setup MongoDB]]></title>
    <link href="http://ccaloha.cc/blog/2015/10/03/ruby-on-rails-using-mongoid-5-dot-0-0-setup-mongodb/"/>
    <updated>2015-10-03T22:33:34+08:00</updated>
    <id>http://ccaloha.cc/blog/2015/10/03/ruby-on-rails-using-mongoid-5-dot-0-0-setup-mongodb</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/Ruby%20on%20Rails%20Development%20using%20Mongoid%205.0.0%20-%20Setup%20MongoDB/MongoDB-Logo.png" alt="MongoDB"></p>

<p>This tutorial series will help you start your Rails project with MongoDB.</p>

<p>And I use Mongoid 5.0.0 as an example.</p>

<p>In this tutorial, you will be able to see how to</p>

<ol>
<li><p>Install MongoDB in Mac OSX</p></li>
<li><p>Create Some Database Users in MongoDB</p></li>
<li><p>Setup Rails Projects</p></li>
</ol>


<p>(Tips)</p>

<ol>
<li><p>Dump Data</p></li>
<li><p>Restore Data</p></li>
</ol>


<p>Let's go !</p>

<!--more-->


<h2>Install MongoDB in Mac OSX</h2>

<p>```</p>

<h1>Intall Homebrew (Mac OSX package manager)</h1>

<p>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</p>

<h1>Update the Hombrew packages first</h1>

<p>brew update</p>

<h1>Install MongoDB</h1>

<p>brew install MongoDB
```</p>

<p>If you want to see where MongoDB is installed</p>

<p><code>
brew ls mongodb
</code></p>

<h2>Create Some Database Users in MongoDB</h2>

<p>Since I want to enable access control on a MongoDB instance, just like Mysql, I have to use username and password to access MongoDB.</p>

<p>First, you must to know where you can setup MongoDB.</p>

<p>```</p>

<h1>In MacOSX</h1>

<p>vim /usr/local/etc/mongod.conf</p>

<h1>In Ubuntu</h1>

<p>vim /etc/mongod.conf
```</p>

<p>Second, you have to make sure that authorization is disable.</p>

<p>In MacOSX</p>

<p>```</p>

<h1>/usr/local/etc/mongod.conf</h1>

<p>systemLog:
  destination: file
  path: /usr/local/var/log/mongodb/mongo.log
  logAppend: true
storage:
  dbPath: /usr/local/var/mongodb
net:
  bindIp: 127.0.0.1
security:
  authorization: disabled
```</p>

<p>In Ubuntu</p>

<p>```</p>

<h1>/etc/mongod.conf</h1>

<p>...</p>

<p>noauth = true
...</p>

<p>```</p>

<p>Then (re)start MongoDB</p>

<p>```</p>

<h1>In Ubuntu</h1>

<p>sudo service mongod restart</p>

<h1>In Mac OSX</h1>

<p>mongod --config /usr/local/etc/mongod.conf
```</p>

<p>Ok, now you are a super user, you can access any database and perform any action. let's create an administrator named 'siteUserAdmin' and he has "userAdminAnyDatabase" role first.</p>

<p><code>
$ mongo
$ use admin
$ db.createUser(
 {
  user: 'siteUserAdmin',
  pwd: '1234567890',
  roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
 }
)
</code></p>

<p>Ok, now we can enable authorization mode.</p>

<p>In MacOSX</p>

<p>```</p>

<h1>vim /usr/local/etc/mongod.conf</h1>

<p>...</p>

<p>security:
  authorization: enabled
```</p>

<p>In Ubuntu</p>

<p>```</p>

<h1>/etc/mongod.conf</h1>

<p>...</p>

<p>auth = true
...</p>

<p>```</p>

<p>And don't forgot restart MongoDB.</p>

<p>Then we now have to use user name and password to access database.</p>

<p><code>
mongo --host localhost --port 27017 --username siteUserAdmin --password  --authenticationDatabase admin
</code></p>

<p>Now, we will create an user  named 'dbadmin' who has 'dbOwner' role.</p>

<p>```</p>

<h1>assume your project will use database: 'your_awesome_project_development'</h1>

<p>use your_awesome_project_development</p>

<p>db.createUser(</p>

<pre><code>{
    user: 'dbadmin',
    pwd: '1234567890',
    roles: [ { role: "dbOwner", db: "your_awesome_project_development" } ]
}
</code></pre>

<p>)
```</p>

<p>if you want to update user's setting.</p>

<p>```
db.updateUser(</p>

<pre><code>"dbadmin",
{
    pwd: 'aloha',
    roles: 
      [
          {role: "read", db: "your_awesome_project_development"}
      ]
}
</code></pre>

<p>)
```</p>

<p>if you want to know which roles can perform which  actions, you can find anwser here:</p>

<p><a href="http://docs.mongodb.org/master/reference/built-in-roles/#userAdmin">http://docs.mongodb.org/master/reference/built-in-roles/#userAdmin</a></p>

<h2>Setup Rails Projects</h2>

<h3>1. create a project without active-record</h3>

<p><code>
rails new your_awesome_project --skip-active-record
</code></p>

<h3>2. add Mongoid to Gemfile</h3>

<p>```</p>

<h1>Gemfile</h1>

<p>gem 'mongoid', '~> 5.0.0'
```</p>

<h3>3. Create a mongoid.yml</h3>

<p><code>
bundle install
rails g mongoid:config
</code></p>

<h3>4. Update yout mongoid.yml</h3>

<p>```
development:
  clients:</p>

<pre><code>default:
  database: your_awesome_project_development
  hosts:
    - localhost:27017
  options:
    user: 'dbadmin'
    password: '1234567890'
    roles:
      - 'dbOwner'
</code></pre>

<p>test:
  clients:</p>

<pre><code>default:
  database: your_awesome_project_test
  hosts:
    - localhost:27017
  options:
    max_retries: 1
    retry_interval: 0
    user: 'dbadmin_tester'
    password: '1234567890'
    roles:
      - 'dbOwner'
</code></pre>

<p>```</p>

<h2>Dump Data</h2>

<p>Please make sure that you have backup role in production MongoDB.</p>

<p>I use 'readWriteAnyDatabase' role.</p>

<p>Assume that you need to dump data from production data and restore to local mongo server.</p>

<p><code>
mongodump --host your.production.mongo.server.ip --port 37017 --username user --password --out /Users/AlohaCC/Desktop/production-mongodump-2015-10-04
</code></p>

<h2>Restore Data</h2>

<p>Please make sure that you have backup role in local MongoDB.</p>

<p><code>
mongorestore --host localhost --port 3017 --username user --password  /Users/AlohaCC/Desktop/production-mongodump-2015-10-04
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Tips] Limit Class Only be used in Development Environment]]></title>
    <link href="http://ccaloha.cc/blog/2015/08/27/tips-limit-some-class-only-be-used-in-development-environment/"/>
    <updated>2015-08-27T17:22:50+08:00</updated>
    <id>http://ccaloha.cc/blog/2015/08/27/tips-limit-some-class-only-be-used-in-development-environment</id>
    <content type="html"><![CDATA[<p>In my project, I have to dump data from Mysql to MongoDB. And, this feature only used in development. However, Rails will load any classes under folder "app/" automatically . So, how can I avoid "Development-Only Class" loading in production environment?</p>

<p>let's check it out~</p>

<p>If you have a class named: <strong>DumpDataFromOldServer</strong> and it located at  folder <strong>'/app/development_only'</strong>. like this:</p>

<p>```</p>

<h1>app/development_only/dump_data_from_old_server.rb</h1>

<p>class DumpDataFromOldServer &lt; ActiveRecord::Base</p>

<pre><code>....
</code></pre>

<p>end
```</p>

<h2>Step1. Application.rb</h2>

<p>you still need to let Rails know which folders should be loaded by using <strong>config.eager_load_paths</strong>.</p>

<p>ps. what's difference between eager_load and auto_load?</p>

<p>please check this <a href="http://stackoverflow.com/questions/19773266/confusing-about-autoload-paths-vs-eager-load-paths-in-rails-4">http://stackoverflow.com/questions/19773266/confusing-about-autoload-paths-vs-eager-load-paths-in-rails-4</a></p>

<p><code>
 config.eager_load_paths += %W(#{Rails.root}/app/development_only)
</code></p>

<p>It will be:</p>

<p>```</p>

<h1>config/application.rb</h1>

<p>require File.expand_path('../boot', <strong>FILE</strong>)</p>

<p>Bundler.require(*Rails.groups)</p>

<p>module MyAwesomeProject
  class Application &lt; Rails::Application
   ...</p>

<p>   config.eager_load_paths += %W(#{Rails.root}/app/development_only)</p>

<p>   ...
   end
end</p>

<p>```</p>

<h2>Step2. Update your environment file</h2>

<p>ref: <a href="http://stackoverflow.com/questions/13756986/how-to-blacklist-directory-loading-in-rails">http://stackoverflow.com/questions/13756986/how-to-blacklist-directory-loading-in-rails</a></p>

<p>Add these lines</p>

<p>```
  path_rejector = lambda { |s| s.include?("app/development_only") }</p>

<p>  # Remove the path from being loaded when Rails starts:
  config.eager_load_paths = config.eager_load_paths.reject(&amp;path_rejector)</p>

<p>  # Remove the path from being lazily loaded
  ActiveSupport::Dependencies.autoload_paths.reject!(&amp;path_rejector)
```</p>

<p>It will be:</p>

<p>```</p>

<h1>config/environments/production.rb</h1>

<p>Rails.application.configure do</p>

<p>  ...</p>

<p>  path_rejector = lambda { |s| s.include?("app/development_only") }</p>

<p>  config.eager_load_paths = config.eager_load_paths.reject(&amp;path_rejector)</p>

<p>  ActiveSupport::Dependencies.autoload_paths.reject!(&amp;path_rejector)
end</p>

<p>```</p>

<h2>Step3. Test</h2>

<p>```</p>

<h1>In Development console: rails c</h1>

<blockquote><p>DumpDataFromOldServer.all.first</p></blockquote>

<p>DumpDataFromOldServer Load (0.6ms)  SELECT  <code>dump_data_from_old_server</code>.* FROM <code>dump_data_from_old_server</code>  LIMIT 1
=> #<DumpDataFromOldServer id: 1, created_at: "2014-05-09 16:59:55"></p>

<h1>In Production console: rails c -e production</h1>

<blockquote><p>DumpDataFromOldServer.all.first
NameError: uninitialized constant DumpDataFromOldServer</p></blockquote>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build up a homemade server-to-server interactions with Google API using Ruby - Take Google Analytics As An Example]]></title>
    <link href="http://ccaloha.cc/blog/2015/08/23/build-up-a-homemade-server-to-server-interactions-with-google-api-using-ruby-take-google-analytics-as-an-example/"/>
    <updated>2015-08-23T15:10:37+08:00</updated>
    <id>http://ccaloha.cc/blog/2015/08/23/build-up-a-homemade-server-to-server-interactions-with-google-api-using-ruby-take-google-analytics-as-an-example</id>
    <content type="html"><![CDATA[<p>Since 'google-api-ruby-client' make a big change from <a href="https://github.com/google/google-api-ruby-client/blob/master/MIGRATING.md">0.8 to 0.9</a> when my project is running out of time, and also I met this <a href="https://github.com/google/google-api-ruby-client/issues/253">issue</a>, So, I make this decision, let's build a API client by myself.</p>

<p>This implementation refer to Google <a href="https://developers.google.com/identity/protocols/OAuth2ServiceAccount">guideline</a></p>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/build%20up%20server-to-server%20interactions%20with%20Google%20API/Google%20API%20server-to-server.png"></p>

<!--more-->


<h2>Step1. Preparation</h2>

<h3>1. Create a Service Account</h3>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/build%20up%20server-to-server%20interactions%20with%20Google%20API/Add%20Credentials.png" alt="add credential"></p>

<h3>2. Download JSON file</h3>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/build%20up%20server-to-server%20interactions%20with%20Google%20API/Download%20JSON.png" alt="Download JSON File"></p>

<p>And I put JSON file into <strong>config</strong> folder.</p>

<h3>3. Copy a Email and Add to Google Analytics</h3>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/build%20up%20server-to-server%20interactions%20with%20Google%20API/Remember%20your%20Email%20.png"></p>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/build%20up%20server-to-server%20interactions%20with%20Google%20API/Add%20email%20to%20Google%20Analytics%20by%20User%20Management.png" alt="Add generated email to Google analytics user"></p>

<h2>Step2. Get Access Token</h2>

<p>Add to <strong>Gemfile</strong></p>

<p><code>
gem "typhoeus"
gem 'jwt'
</code></p>

<p>Create a file named <strong>lib/google_anallytics.rb</strong></p>

<p>Again, this implementation refer to Google <a href="https://developers.google.com/identity/protocols/OAuth2ServiceAccount">guideline</a>. Please, check this guideline first. Then you will understand how I write fuction get_token.</p>

<p>```
require 'typhoeus'
require "jwt"
require 'date'
module GoogleAnalytic</p>

<p>  def get_token</p>

<pre><code>json_file = File.join("#{Rails.root}/config", 'YOUR-JSON-FILE-NAME.json')
file = File.read(json_file)
key_hash = JSON.parse(file)
aud     = "https://www.googleapis.com/oauth2/v3/token"
now     = Time.new
iat     = (now - 60).to_i
@exp    = (now + 50.minutes).to_i
scopes  = 'https://www.googleapis.com/auth/analytics.readonly'
sub     = key_hash["client_email"]
iss     = key_hash["client_email"]
jwt_claim_set    = {
  'iss' =&gt; iss, 
  'sub' =&gt; sub, 
  'scope' =&gt; scopes,
  'aud' =&gt; aud, 
  'exp' =&gt; @exp,
  'iat' =&gt; iat
  }
token            = JWT.encode(jwt_claim_set,  OpenSSL::PKey::RSA.new(key_hash["private_key"]), 'RS256')

res = Typhoeus::Request.post('https://www.googleapis.com/oauth2/v3/token', 
  body: 
    { 
      grant_type: "urn:ietf:params:oauth:grant-type:jwt-bearer",
      assertion: token
    }
)

res_hash = MultiJson.load(res.body)

token = res_hash["access_token"]
return token
</code></pre>

<p>  end
end
```</p>

<h2>Step3. Fetch Data</h2>

<p>In my case, I create a model for saving Google Analytics data. So, I'll show you how I fetch data.</p>

<p>```
class GoogleAnalyticEvent
  include GoogleAnalytic
  include Mongoid::Document
  include Mongoid::Timestamps
  field :category, type: String      <br/>
  field :label, type: String      <br/>
  field :action, type: String
  field :total_events, type: Integer     <br/>
  field :unique_events, type: Integer
  field :data_date, type: Date
  index({category: 1, label: 1, data_date: 1, action:1 })</p>

<p>  def get_event_from_ga_api(params={})</p>

<pre><code>@data_date = Date.today - 1
@parameters = {
    'ids'         =&gt; "ga:12345678",
    'start-date'  =&gt; @data_date.strftime("%Y-%m-%d"),
    'end-date'    =&gt; @data_date.strftime("%Y-%m-%d"),
    'metrics'     =&gt; "ga:totalEvents,ga:uniqueEvents",
    'dimensions'  =&gt; "ga:eventCategory,ga:eventLabel,ga:eventAction",
    'max-results' =&gt; "10000"
  }
query_paginate(@parameters)
</code></pre>

<p>  end</p>

<p>  def query_paginate(parameters)</p>

<pre><code>parameters['access_token'] = get_token
count = 0
loop do
    if Time.new.to_i &gt; @exp
      parameters['access_token'] = get_token
    end
   res = Typhoeus::Request.get('https://www.googleapis.com/analytics/v3/data/ga', 
    params: parameters
   )
  result = MultiJson.load(res.body)
  if result["error"].nil?
    sync_to_db(result)  if result["totalResults"] &gt; 0
    max_count = result["totalResults"] / parameters["max-results"].to_i
  end
  break if count == max_count || result["error"].present?
  count += 1
  parameters["start-index"] = parameters["max-results"].to_i * count + 1
end
</code></pre>

<p>  end</p>

<p>  def sync_to_db(result)</p>

<pre><code>result["columnHeaders"].each_with_index do |h,i|
  case h["name"].to_s
  when "ga:eventCategory"
    @category= i 
  when "ga:eventLabel"
    @label   = i
  when "ga:eventAction"
    @action  = i
  when "ga:totalEvents" 
    @total_events  = i
  when "ga:uniqueEvents"
    @unique_events = i
  end
end 
result["rows"].each do |array_data|
    GoogleAnalyticEvent.create(category:      array_data[@category], 
                                label:        array_data[@label], 
                                action:       array_data[@action],
                                total_events:       array_data[@total_events],
                                unique_events:      array_data[@unique_events],
                                data_date:          @data_date)
end
</code></pre>

<p>  end
end
```</p>

<p>Let's me explain each code snapshots.</p>

<h3>3-1: First of all, I initialize query parameters such as ids, start-date, ...etc in instance variable @parameters.</h3>

<p>PS. you can easily understand which parameters you need by using <a href="https://ga-dev-tools.appspot.com/query-explorer/">Google Analytics Query Explorer</a>. Once, you find out which parameters you need, just copy to here like I do.</p>

<p>```
def get_event_from_ga_api(params={})</p>

<pre><code>@data_date = Date.today - 1
@parameters = {
    'ids'         =&gt; "ga:12345678",
    'start-date'  =&gt; @data_date.strftime("%Y-%m-%d"),
    'end-date'    =&gt; @data_date.strftime("%Y-%m-%d"),
    'metrics'     =&gt; "ga:totalEvents,ga:uniqueEvents",
    'dimensions'  =&gt; "ga:eventCategory,ga:eventLabel,ga:eventAction",
    'max-results' =&gt; "10000"
  }
query_paginate(@parameters)
</code></pre>

<p>  end
```</p>

<h3>3-2: Second, let's see sync_to_db first.</h3>

<p>After I got Google API's response, I will save to database.</p>

<p>let's see what do we get from google analytics first.</p>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/build%20up%20server-to-server%20interactions%20with%20Google%20API/Google%20Analytics%20Return%20Result.png" alt="Google Analytics Return Data"></p>

<p>Google show you the return data's column header name by "columnHeaders". And "rows" data is given as an array. And each array's elements refer to "columnHeaders" respectively. For exameple, in above picture, you can see "ga:eventCategory" is in first of columnHeaders. So, in rows, each array's first element is value of "ga:eventCategory". Then I save data to model GoogleAnalyticEvent.</p>

<p>That's all fuction "sync_to_db" do.</p>

<p>```
def sync_to_db(result)</p>

<pre><code>result["columnHeaders"].each_with_index do |h,i|
  case h["name"].to_s
  when "ga:eventCategory"
    @category= i 
  when "ga:eventLabel"
    @label   = i
  when "ga:eventAction"
    @action  = i
  when "ga:totalEvents" 
    @total_events  = i
  when "ga:uniqueEvents"
    @unique_events = i
  end
end 
result["rows"].each do |array_data|
    GoogleAnalyticEvent.create(category:      array_data[@category], 
                                label:        array_data[@label], 
                                action:       array_data[@action],
                                total_events:       array_data[@total_events],
                                unique_events:      array_data[@unique_events],
                                data_date:          @data_date)
end
</code></pre>

<p>  end
```</p>

<h3>3-3: Finally, let's see function query_paginate.</h3>

<p>```
def query_paginate(parameters)</p>

<pre><code>parameters['access_token'] = get_token
count = 0
loop do
    if Time.new.to_i &gt; @exp
      parameters['access_token'] = get_token
    end
   res = Typhoeus::Request.get('https://www.googleapis.com/analytics/v3/data/ga', 
    params: parameters
   )
  result = MultiJson.load(res.body)
  if result["error"].nil?
    sync_to_db(result)  if result["totalResults"] &gt; 0
    max_count = result["totalResults"] / parameters["max-results"].to_i
  end
  break if count == max_count || result["error"].present?
  count += 1
  parameters["start-index"] = parameters["max-results"].to_i * count + 1
end
</code></pre>

<p>  end
```
I have to get access token by "get_token", And this function also assign expire time to @exp.</p>

<p>```
parameters['access_token'] = get_token</p>

<p>```</p>

<p>Then I write a loop for pagination. At first, I check token is expired or not, if is expired, I have to get token again.</p>

<p>```
if Time.new.to_i > @exp
  parameters['access_token'] = get_token
end</p>

<p>```</p>

<p>Now, I use Typhoeus::Request.get method with params fetching data from Google Analytics.</p>

<p>```
res = Typhoeus::Request.get('https://www.googleapis.com/analytics/v3/data/ga',</p>

<pre><code>    params: parameters
   )
</code></pre>

<p>result = MultiJson.load(res.body)
```</p>

<p>And if there are no any errors, I will save data to database.</p>

<p><code>
if result["error"].nil?
  sync_to_db(result)  if result["totalResults"] &gt; 0
  max_count = result["totalResults"] / parameters["max-results"].to_i
end
</code></p>

<p>Finally, break or continue to get next batch data.</p>

<p><code>
break if count == max_count || result["error"].present?
count += 1
parameters["start-index"] = parameters["max-results"].to_i * count + 1
</code></p>

<h2>That's it.</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[For Dummies Stress Test Using JMeter in Rails 4 + Ruby 2.2]]></title>
    <link href="http://ccaloha.cc/blog/2015/07/22/for-dummies-stress-test-using-jmeter-in-rails-4-plus-ruby-2-dot-2/"/>
    <updated>2015-07-22T09:16:12+08:00</updated>
    <id>http://ccaloha.cc/blog/2015/07/22/for-dummies-stress-test-using-jmeter-in-rails-4-plus-ruby-2-dot-2</id>
    <content type="html"><![CDATA[<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/stress%20test/jmeter.png" alt="jmeter generated by ruby-jemer"></p>

<!--more-->


<p>Inspired by</p>

<ol>
<li><a href="http://www.jetthoughts.com/blog/tricks/2014/08/05/stress-testing-your-rails-application-using-jmeter.html">http://www.jetthoughts.com/blog/tricks/2014/08/05/stress-testing-your-rails-application-using-jmeter.html</a></li>
<li><a href="https://github.com/flood-io/ruby-jmeter">https://github.com/flood-io/ruby-jmeter</a></li>
<li><a href="http://jmeter.apache.org/usermanual/get-started.html">http://jmeter.apache.org/usermanual/get-started.html</a></li>
</ol>


<h2>In your local machine (Mac OSX)</h2>

<p>```
brew update
brew install jmeter --with-plugins</p>

<p>```</p>

<h2>In your remote server</h2>

<p>```</p>

<h1>if your want test in remote server</h1>

<p>sudo apt-get install jmeter</p>

<p>```</p>

<h2>Gemfile</h2>

<p>write test plans for JMeter easily</p>

<p>```
gem ruby-jmeter</p>

<p>```</p>

<h2>寫Test Plan</h2>

<p>[Rereference] 語法支援哪些：</p>

<ol>
<li><p><a href="https://github.com/flood-io/ruby-jmeter/blob/5ae25cc32c8d05fcbe32bf143bdfbbd2d657517c/lib/ruby-jmeter/DSL.md">https://github.com/flood-io/ruby-jmeter/blob/5ae25cc32c8d05fcbe32bf143bdfbbd2d657517c/lib/ruby-jmeter/DSL.md</a></p></li>
<li><p>可查看 alies_methods <a href="https://github.com/flood-io/ruby-jmeter/blob/5ae25cc32c8d05fcbe32bf143bdfbbd2d657517c/lib/ruby-jmeter/dsl.rb">https://github.com/flood-io/ruby-jmeter/blob/5ae25cc32c8d05fcbe32bf143bdfbbd2d657517c/lib/ruby-jmeter/dsl.rb</a></p></li>
</ol>


<h3>Write A Stress Test Helper</h3>

<p>```</p>

<h1>test/stress/stress_helper.rb</h1>

<p>require 'ruby-jmeter'</p>

<p>def default_setting(params={})
  domain    = params[:domain]        || 'localhost'
  protocol  = params[:protocol]      || 'https'
  port      = params[:port]          || '3000'
  cookie    = params[:cookie].to_s   || 'true'
  # defaults 會建立jmeter的 "HTTP Request Default"，讓你設定 domain或是 protocol...等數值
  defaults domain: domain, protocol: protocol, port: port</p>

<p>  # cookies 會建立jmeter的 "HTTP Cookie Manager"
  # 如果希望每個threads都有自己的cookie，要將此行code，寫到thread內
  # cookies policy 之前卡了我很久，見註一
  cookies policy: 'compatibility',clear_each_iteration: true unless params[:cookie] == 'false'
end</p>

<h1>Login Helper</h1>

<h1>因為我們登入後會倒回首頁，所以，我有檢查 使用者的名稱是否有出現</h1>

<p>def login(email,pwd,nickname)
  visit name: 'Sign In', url: '/users/sign_in' do</p>

<pre><code># 會抓變數，並且將值assign給 'csrf-token' 與 'csrf-param'
extract name: 'csrf-token', xpath: "//meta[@name='csrf-token']/@content", tolerant: true
extract name: 'csrf-param', xpath: "//meta[@name='csrf-param']/@content", tolerant: true
</code></pre>

<p>  end</p>

<p>  # For devise issue
  http_header_manager name: 'X-CSRF-Token', value: '${csrf-token}'</p>

<p>  # 送出登入
  submit name: 'Submit Sign In form', url: '/users/sign_in',</p>

<pre><code>always_encode: true,
fill_in: {
  'utf8'          =&gt; '✓',
  '${csrf-param}' =&gt; '${csrf-token}',
  'user[email]'        =&gt; email,
  'user[password]'     =&gt; pwd,
  'commit'             =&gt; 'Log in'
} do
# 登入後會倒回首頁，檢查是否包含你的nickname
assert contains: nickname, scope: 'main'
</code></pre>

<p>  end
end
```</p>

<p>註一： cookies policy 之前卡了我很久，因為我發現我登入都會錯誤！都是csrf-token 不相符，我的認知，那是因為Devise使用cookie作為判斷機制，所以cookie policy不能選用<strong>rfc2109</strong>，要選用<strong>compatibility</strong> 他會符合目前幾乎所有線上網站的cookie需求！</p>

<p>Ruby-Jmeter &lt;-> Jmeter</p>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/stress%20test/ruby-jmeter-mapping-1.png" alt="ruby-jmeter-mapping-1"></p>

<h3>Non Login User Stress Test Plan</h3>

<p>```</p>

<h1>test/stress/non_login.rb</h1>

<p>require './stress_helper'</p>

<p>test do
  default_setting domain: 'your.awesome.website', portocal: 'https' , port: '443'
  #default_setting() # 本機測試使用</p>

<p>  # 壓測，登入後的行為
  # * 使用threads是因為 thread 代表jmeter裡面的thread_group，thread_group就是告訴jmeter
  #   有多少使用者要模擬，多久送一次requests，多少requests要被送出
  # * counts 代表 多少個使用者
  # * rampup 每個使用者的執行間隔
  # * loops 代表多重複做多少次測試</p>

<p>  for i in 1..10</p>

<pre><code>threads count: 20, rampup: 1 ,loops: 1 do
  think_time 5000, 2000
    transaction "活動專區#{i}" do
      # 這邊會去爬 class: 'items' 底下每個 &lt;a&gt; 的href
    # 並且把他assign給 "act-urls"
      visit name: '活動專區首頁', url: "/activities?sort=1&amp;page=#{Random.rand(1..4)}" do 
        extract name: 'act-urls', xpath: "//div[contains(@class,'items')]//a//@href", tolerant: true 
      end
      for i in 1..3
        visit name: "隨便點活動#{i}", url: "${act-urls_#{Random.rand(1..12)}}" do
          extract name: 'product-urls', xpath: "//div[contains(@class,'item-info')]//a//@href", tolerant: true 
        end
      end
    end
  view_results_tree
  debug_sampler
end
</code></pre>

<p>  end</p>

<p>  for i in 1..5</p>

<pre><code>threads count: 20, rampup: 1 ,loops: 1 do
  think_time 5000, 2000
    transaction "活動專區-標籤#{i}" do
      visit name: '活動專區首頁', url: "/activities" do 
        extract name: 'act-tag-urls', xpath: "//div[contains(@class,'keywords')]//a//@href", tolerant: true 
      end
      for i in 1..4
        visit name: "隨便點活動標籤#{i}", url: "${act-tag-urls_#{Random.rand(1..4)}}"
      end
    end
  view_results_tree
  debug_sampler
end
</code></pre>

<p>  end</p>

<p>  view_results_in_table
  graph_results
  aggregate_graph
  view_results_tree
  summary_report</p>

<p>end.run(
  gui: true,
  file: 'jmeter-visitor.jmx',
  log:  'jmeter-visitor.log',
  jtl:  'results-visit.jtl'
)
```
Ruby-Jmeter &lt;-> Jmeter</p>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/stress%20test/ruby-jmeter-mapping-2.png" alt="ruby-jmeter-mapping-2"></p>

<h3>Login User Stress Test</h3>

<p>```</p>

<h1>test/stress/login.rb</h1>

<p>require './stress_helper'</p>

<p>test do
  default_setting domain: 'your.awesome.website', portocal: 'https' , port: '443'
  # default_setting() # 本機測試使用</p>

<p>  # 壓測，登入後的行為
  threads count: 10, rampup: 1, loops: 1 do</p>

<pre><code>think_time 5000, 2000

transaction 'Log In and View page' do

 login('your@login.account','your-password','your-nickname')

# 這邊會去爬 class: 'ucnh-fs-ls-uctrls' 底下每個 &lt;a&gt; 的href
# 並且把他assign給 "users-urls"
  visit name: 'activity', url: '/activities' do 
    extract name: 'users-urls', xpath: "//div[contains(@class,'ucnh-fs-ls-uctrls')]//a//@href", tolerant: true 
  end
</code></pre>

<p>  # 因為users-urls是個 array，用法就是 ${users-url_X}, X代表array第X個element</p>

<pre><code>  visit name: 'user list1', url: '${users-urls_1}'
  visit name: 'user lists2', url: '${users-urls_3}'
  visit name: 'user lists3', url: '${users-urls_4}'
  visit name: 'user profile', url: '${users-urls_5}'
  visit name: 'user account edit', url: '${users-urls_6}'
end
debug_sampler # 給Debug用
view_results_tree
</code></pre>

<p>  end
  view_results_in_table
  graph_results
  aggregate_graph
  view_results_tree
  summary_report</p>

<p>end.run(
  gui: true,
  file: 'jmeter-after-sign-in.jmx',
  log:  'jmeter-after-sign-in.log',
  jtl:  'results-after-sign-in.jtl'
)
```
Ruby-Jmeter &lt;-> Jmeter</p>

<p><img src="https://dl.dropboxusercontent.com/u/22307926/Blog%20Image/stress%20test/ruby-jmeter-mapping-3-submit-form.png" alt="ruby-jmeter-mapping-3-submit-form"></p>

<h2>開始測試</h2>

<p>```
cd your_awesome_projects/test/stress</p>

<h1>ruby 你要執行的.rb檔，ex:</h1>

<p>ruby non_login.rb</p>

<h1>此時會跳出一個apache jmeter的畫面，點選綠色執行按鈕即可</h1>

<p>```</p>

<h2>Others</h2>

<h3>Remove tracking jmeter generated files</h3>

<p>```
echo "/test/stress/<em>.log" >> .gitignore
echo "/test/stress/</em>.jmx" >> .gitignore</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
